<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.repository.BlogMapper">
    <resultMap id="BaseResultMap" type="com.example.demo.model.Blog">
        <constructor>
            <arg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
            <arg column="title" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="created" javaType="java.util.Date" jdbcType="TIMESTAMP" />
            <arg column="content" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="userid" javaType="java.lang.Integer" jdbcType="INTEGER" />

        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        id,title,created,content,userid
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from blog
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <select id="selectAll" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from blog
    </select>

    <insert id="insertBlog">
        insert into blog(title,content,userid) values (#{title},#{content},#{userid})
    </insert>

    <delete id="deleteBlog">
        delete from blog
        where id=#{id}
    </delete>

    <update id="changeblogforcontent">
        update blog
        set content=#{content}
        where id=#{id}
    </update>


    <select id="selectBlogByuserid" resultMap="BaseResultMap">
        select *
        from blog
        where userid=#{userid}
    </select>

    <select id="selectCollectionBlogByuserid" resultMap="BaseResultMap">
        select *
        from blog
        where id=any(select blogid from collection where collection.userid=#{userid})
    </select>

</mapper>